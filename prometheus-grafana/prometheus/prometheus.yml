# global config
global:
  scrape_interval: 15s 	
  evaluation_interval: 15s 	

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'book-issuer-ms'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  - 'alert.rules'

# alert
alerting:
  alertmanagers:
    - scheme: http
      static_configs:
      - targets: 
        - "alertmanager:9093"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  - job_name: 'API-GATEWAY'
    scrape_interval: 5s
    metrics_path: '/actuator/prometheus'
    static_configs:
      - targets: ['host.docker.internal:8181']  # ['localhost:8181']  

  - job_name: 'prometheus'
    # Override global default & scrape targets from this job
    scrape_interval: 5s
    static_configs:
      - targets: ['host.docker.internal:9095']

  - job_name: 'BOOK-MICROSERVICE'
    # Override global default & scrape targets from this job
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['host.docker.internal:8097']
        # labels:
        #   application: 'BOOK-MICROSERVICE'

  - job_name: 'ISSUER-MICROSERVICE'
    # Override global default & scrape targets from this job
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['host.docker.internal:8099']
        # labels:
        #   application: 'ISSUER-MICROSERVICE'

  # - job_name: 'API-GATEWAY'
  #   # Override global default & scrape targets from this job
  #   metrics_path: '/actuator/prometheus'
  #   scrape_interval: 5s
  #   static_configs:
  #     - targets: ['localhost:8181']
  #       labels:
  #         application: 'API-GATEWAY'
